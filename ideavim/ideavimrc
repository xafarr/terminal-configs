nnoremap <SPACE> <Nop>
let mapleader = " "

set nocompatible
set idearafactormode=keep
set ideajoin
set encoding=utf8
" set number relativenumber
set matchpairs+=<:>
set clipboard=unnamed,unnamedplus,ideaput
set showcmd
set scrolloff=5
set incsearch 
set ignorecase
set smartcase
set surround
set multiple-cursors
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set cursorline
filetype indent on
set wildmenu
set showmatch
set hidden
set splitbelow
set splitright
set laststatus=2
" set hlsearch
set visualbell
set noerrorbells
set timeoutlen=1000

" Open new line below and above current line
nnoremap <leader>o o<esc>
nnoremap <leader>O O<esc>

" --- backup and swap files ---
set nobackup
set nowritebackup
set noswapfile

" search occurrence count in file
nnoremap <leader>* *<C-O>:%s///gn<CR>``

" Faster scrolling
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv
" Split horizontally with new file
nnoremap <silent> <leader>sh :split<CR>
nnoremap <silent> <leader>sv :vsplit<CR>
nnoremap <silent> <leader>bd :close<CR>
" Faster scrolling
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" Make Y behave like other capitals
nnoremap Y y$

" Prevent x from overriding what's in the clipboard.
noremap x "_x
noremap X "_x

" Circular windows navigation
nnoremap <tab>   <C-w>w
nnoremap <S-tab> <C-w>W

" Rotate split windows
nnoremap <leader><C-h> <C-w>H
nnoremap <leader><C-j> <C-w>J
nnoremap <leader><C-k> <C-w>K
nnoremap <leader><C-l> <C-w>L

" Move between splits (windows)
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Movement in insert mode
inoremap <C-h> <C-o>h
inoremap <C-l> <C-o>a
inoremap <C-j> <C-o>j
inoremap <C-k> <C-o>k

if has("mac")
  " Alt-j <A-j> mapped to âˆ†
  " Alt-k <A-k> mapped to Ëš
  nnoremap âˆ† :m .+1<CR>==
  nnoremap Ëš :m .-2<CR>==
  inoremap âˆ† <Esc>:m .+1<CR>==gi
  inoremap Ëš <Esc>:m .-2<CR>==gi
  vnoremap âˆ† :m '>+1<CR>gv=gv
  vnoremap Ëš :m '<-2<CR>gv=gv
endif

if has("linux")
  " Alt-j <A-j> mapped to J
  " Alt-k <A-k> mapped to K
  nnoremap j :m .+1<CR>==
  nnoremap k :m .-2<CR>==
  inoremap j <Esc>:m .+1<CR>==gi
  inoremap k <Esc>:m .-2<CR>==gi
  vnoremap j :m '>+1<CR>gv=gv
  vnoremap k :m '<-2<CR>gv=gv
endif

" IntelliJ Action Mappings
" Refactor
map <leader>rn <Action>(RenameElement)
map <leader>Rn <Action>(ChangeTypeSignature)
map <leader>xm <Action>(ExtractMethod)
" Search
map <leader>/ <Action>(FindInPath)
map <leader>ff <Action>(GotoFile)
map <leader>fo <Action>(GotoClass)
map <leader>f" <Action>(PasteMultiple)
map <leader>fb <Action>(RecentFiles)
map <leader><space> <Action>(SearchEverywhere)
" Format
map <leader>, <Action>(ReformatCode)
" Goto
map gi <Action>(GotoImplementation)
map gu <Action>(GotoSuperMethod)
" Intentions/Suggestions/Generate
map <leader>ca <Action>(ShowIntentionActions)
map <C-p> <Action>(ParameterInfo)
map <C-n> <Action>(Generate)
map <leader><C-n> <Action>(NewElement)
" Run/Debug
map <leader>rc <Action>(RedesignedRunConfigurationSelector)
map <leader>dd <Action>(Debug)
map <leader>rr <Action>(Run)
map <leader>rt <Action>(RunClass)
map <leader>dt <Action>(DebugClass)
map <leader>rs <Action>(Stop)
" Navigation
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
map <C-Up> <Action>(ShowNavBar)
map <leader>e <Action>(ActivateProjectToolWindow)
map ]d <Action>(GotoNextError)
map [d <Action>(GotoPreviousError)
" Git
map <leader>hr <Action>(Vcs.RollbackChangedLines)
map <leader>hb <Action>(Annotate)
map ]c <Action>(VcsShowNextChangeMarker)
map [c <Action>(VcsShowPrevChangeMarker)

" IntelliJ Extension
set NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

